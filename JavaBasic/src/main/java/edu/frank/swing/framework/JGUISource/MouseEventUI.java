/*
 * MouseEventUI.java
 *
 * Created on __DATE__, __TIME__
 */

package edu.frank.swing.framework.JGUISource;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;

import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;

import edu.frank.log4j.Log4JConfig;

/**
 *
 * @author  __USER__
 */
public class MouseEventUI extends javax.swing.JFrame {

	private static final Logger logger = Log4JConfig
			.getLogger(MouseEventUI.class);

	/**
	 * Frame's width and height
	 *
	 * @since JavaBasic 1.0.0.0
	 */
	private int height, width;

	/**
	 * Frame tookit
	 *
	 * @since JavaBasic 1.0.0.0
	 */
	private Toolkit toolkit = getToolkit();

	private String infoMsg = null;

	private int newX = -1;
	private int oldX = -1;
	private int newY = -1;
	private int oldY = -1;

	private int lastX = -1;
	private int lastY = -1;

	private boolean isUILoad = false;

	private boolean isSelected = false;

	private boolean isLinkTreeNode = false;

	/** Creates new form MouseEventUI */
	public MouseEventUI() {
		initComponents();

		initTree();

		initTable();

		// Force the frame on the middle of the screen
		this.width = getWidth();
		this.height = getHeight();
		int x = (this.toolkit.getScreenSize().width - this.width) / 2;
		int y = (this.toolkit.getScreenSize().height - this.height) / 2;
		this.setBounds(x, y, this.width, this.height);
	}

	private void initTable() {
		this.mainTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
	}

	private void initTree() {
		try {

			DefaultTreeModel treeModel = (DefaultTreeModel) this.mainTree
					.getModel();
			DefaultMutableTreeNode root = (DefaultMutableTreeNode) treeModel
					.getRoot();
			root.removeAllChildren();
			root.setUserObject("");
			root.setAllowsChildren(true);

			DefaultMutableTreeNode hardDisk = new DefaultMutableTreeNode("");
			hardDisk.setAllowsChildren(true);
			DefaultMutableTreeNode cDisk = new DefaultMutableTreeNode("C");
			cDisk.setAllowsChildren(false);
			treeModel.insertNodeInto(hardDisk, root, root.getChildCount());
			treeModel.insertNodeInto(cDisk, hardDisk, hardDisk.getChildCount());

			this.mainTree.getSelectionModel().setSelectionMode(
					TreeSelectionModel.SINGLE_TREE_SELECTION);
			//
			DefaultTreeCellRenderer cellrenderer = (DefaultTreeCellRenderer) this.mainTree
					.getCellRenderer();
			cellrenderer.setFont(new Font("Serif", Font.PLAIN, 14));
			cellrenderer.setBackgroundNonSelectionColor(Color.white);
			cellrenderer.setBackgroundSelectionColor(Color.yellow);
			cellrenderer.setBorderSelectionColor(Color.red);

			//,
			cellrenderer.setTextNonSelectionColor(Color.black);
			cellrenderer.setTextSelectionColor(Color.green);

			this.mainTree.addTreeSelectionListener(new TreeSelectionListener() {

				@Override
				public void valueChanged(TreeSelectionEvent e) {
					if (e != null) {
						javax.swing.JTree tree = (javax.swing.JTree) e
								.getSource();
					}
				}
			});

			treeModel.setAsksAllowsChildren(true);
			treeModel.reload();
		} catch (Exception ex) {
			String message = "";
			logger.error(message, ex);
			JOptionPane.showMessageDialog(MouseEventUI.this, message, "",
					JOptionPane.WARNING_MESSAGE);
		}
	}

	@Override
	public void paint(Graphics g) {
		Graphics2D g2d = (Graphics2D) g;
		super.paint(g2d);
		if (this.isUILoad) {
			if (g2d != null && !StringUtils.isBlank(this.infoMsg)) {
				g2d.drawString(this.infoMsg, this.newX, this.newY);
			}
		}
		this.isUILoad = true;
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		this.toolbarPanel = new javax.swing.JPanel();
		this.toolbar = new javax.swing.JToolBar();
		this.btnExit = new javax.swing.JButton();
		this.mainPanel = new javax.swing.JPanel();
		this.mainSplitPanel = new javax.swing.JSplitPane();
		this.treeScrollPanel = new javax.swing.JScrollPane();
		this.mainTree = new javax.swing.JTree();
		this.rightPanel = new javax.swing.JPanel();
		this.location = new javax.swing.JLabel();
		this.tableScrollPanel = new javax.swing.JScrollPane();
		this.mainTable = new javax.swing.JTable();
		this.mainMenuBar = new javax.swing.JMenuBar();
		this.fileMenu = new javax.swing.JMenu();
		this.exitMenuItem = new javax.swing.JMenuItem();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setFont(new java.awt.Font("Verdana", 0, 10));
		setName("mouseEventUI");
		addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				formMouseReleased(evt);
			}
		});
		addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
			@Override
			public void mouseDragged(java.awt.event.MouseEvent evt) {
				formMouseDragged(evt);
			}
		});

		this.toolbar.setRollover(true);

		this.btnExit.setText("\u9000\u51fa(X)");
		this.btnExit.setFocusable(false);
		this.btnExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		this.btnExit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		this.btnExit.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnExitActionPerformed(evt);
			}
		});
		this.toolbar.add(this.btnExit);

		javax.swing.GroupLayout toolbarPanelLayout = new javax.swing.GroupLayout(
				this.toolbarPanel);
		this.toolbarPanel.setLayout(toolbarPanelLayout);
		toolbarPanelLayout.setHorizontalGroup(toolbarPanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(this.toolbar, javax.swing.GroupLayout.DEFAULT_SIZE,
						700, Short.MAX_VALUE));
		toolbarPanelLayout.setVerticalGroup(toolbarPanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(this.toolbar, javax.swing.GroupLayout.DEFAULT_SIZE,
						39, Short.MAX_VALUE));

		this.mainSplitPanel.setDividerLocation(200);
		this.mainSplitPanel.setDividerSize(1);

		this.treeScrollPanel.setViewportView(this.mainTree);

		this.mainSplitPanel.setLeftComponent(this.treeScrollPanel);

		this.location.setText("Location : ( *, *)");

		this.mainTable
				.setModel(new javax.swing.table.DefaultTableModel(
						new Object[][] {
								{ new Integer(10001), "LiMing", "",
										new Float(98.65) },
								{ new Integer(10002), "ZhangLi", "",
										new Float(95.35) },
								{ new Integer(10003), "GongLi", "",
										new Float(88.56) },
								{ new Integer(10004), "ZhouCongLai", "",
										new Float(78.98) } }, new String[] {
								"", "", "", "" }) {
					Class[] types = new Class[] { java.lang.Integer.class,
							java.lang.String.class, java.lang.String.class,
							java.lang.Float.class };

					@Override
					public Class getColumnClass(int columnIndex) {
						return this.types[columnIndex];
					}
				});
		this.mainTable.addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mousePressed(java.awt.event.MouseEvent evt) {
				mainTableMousePressed(evt);
			}
		});
		this.tableScrollPanel.setViewportView(this.mainTable);

		javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(
				this.rightPanel);
		this.rightPanel.setLayout(rightPanelLayout);
		rightPanelLayout.setHorizontalGroup(rightPanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						rightPanelLayout.createSequentialGroup().addGap(154,
								154, 154).addComponent(this.location)
								.addContainerGap(255, Short.MAX_VALUE))
				.addGroup(
						rightPanelLayout.createSequentialGroup()
								.addContainerGap().addComponent(
										this.tableScrollPanel,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										468, Short.MAX_VALUE)
								.addGap(18, 18, 18)));
		rightPanelLayout
				.setVerticalGroup(rightPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								rightPanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(
												this.tableScrollPanel,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												198,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												208, Short.MAX_VALUE)
										.addComponent(this.location).addGap(35, 35,
												35)));

		this.mainSplitPanel.setRightComponent(this.rightPanel);

		javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(
				this.mainPanel);
		this.mainPanel.setLayout(mainPanelLayout);
		mainPanelLayout.setHorizontalGroup(mainPanelLayout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				this.mainSplitPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 700,
				Short.MAX_VALUE));
		mainPanelLayout.setVerticalGroup(mainPanelLayout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				this.mainSplitPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 380,
				Short.MAX_VALUE));

		this.mainMenuBar.setName("fileMenu");

		this.fileMenu.setMnemonic('F');
		this.fileMenu.setText("File(F)");
		this.fileMenu.setToolTipText("\u6587\u4ef6");

		this.exitMenuItem.setMnemonic('X');
		this.exitMenuItem.setText("Exit(X)");
		this.exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				exitMenuItemActionPerformed(evt);
			}
		});
		this.fileMenu.add(this.exitMenuItem);

		this.mainMenuBar.add(this.fileMenu);

		setJMenuBar(this.mainMenuBar);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				this.toolbarPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(this.mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								layout
										.createSequentialGroup()
										.addComponent(
												this.toolbarPanel,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												this.mainPanel,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	private void formMouseReleased(java.awt.event.MouseEvent evt) {
		if (MouseEventUI.this.isUILoad) {
			this.lastX = evt.getX();
			this.lastY = evt.getY();
			this.location.setText("location:(" + this.lastX + "," + this.lastY + ")");
		}
	}

	private void mainTableMousePressed(java.awt.event.MouseEvent evt) {
		if (MouseEventUI.this.isUILoad) {
			if (evt.getButton() == MouseEvent.BUTTON1) {
				int rowIndex = MouseEventUI.this.mainTable.getSelectedRow();
				Integer stdNo = (Integer) MouseEventUI.this.mainTable
						.getValueAt(rowIndex, 0);
				String stdName = (String) MouseEventUI.this.mainTable
						.getValueAt(rowIndex, 1);
				MouseEventUI.this.infoMsg = "[NO: " + String.valueOf(stdNo)
						+ ",NAME: " + stdName + "]";
				MouseEventUI.this.newX = evt.getX();
				MouseEventUI.this.newY = evt.getY();
				MouseEventUI.this.oldX = MouseEventUI.this.newX;
				MouseEventUI.this.oldY = MouseEventUI.this.newY;
				this.location.setText("location:(" + this.newX + "," + this.newY + ")");
			}
		}
	}

	private void formMouseDragged(java.awt.event.MouseEvent evt) {
		if (MouseEventUI.this.isUILoad) {
			if (evt.getButton() == MouseEvent.NOBUTTON) {
				int rowIndex = MouseEventUI.this.mainTable.getSelectedRow();
				if (rowIndex >= 0) {
					Integer stdNo = (Integer) MouseEventUI.this.mainTable
							.getValueAt(rowIndex, 0);
					String stdName = (String) MouseEventUI.this.mainTable
							.getValueAt(rowIndex, 1);
					MouseEventUI.this.infoMsg = "[NO: " + String.valueOf(stdNo)
							+ ",NAME: " + stdName + "]";
					MouseEventUI.this.newX = evt.getX();
					MouseEventUI.this.newY = evt.getY();
					this.location.setText("location:(" + this.newX + "," + this.newY + ")");
					repaint();
				}

			}
		}
	}

	private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
		if (evt != null) {
			MouseEventUI.this.dispose();
		}
	}

	private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {
		if (evt != null) {
			MouseEventUI.this.dispose();
		}
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MouseEventUI().setVisible(true);

			}
		});
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton btnExit;
	private javax.swing.JMenuItem exitMenuItem;
	private javax.swing.JMenu fileMenu;
	private javax.swing.JLabel location;
	private javax.swing.JMenuBar mainMenuBar;
	private javax.swing.JPanel mainPanel;
	private javax.swing.JSplitPane mainSplitPanel;
	private javax.swing.JTable mainTable;
	private javax.swing.JTree mainTree;
	private javax.swing.JPanel rightPanel;
	private javax.swing.JScrollPane tableScrollPanel;
	private javax.swing.JToolBar toolbar;
	private javax.swing.JPanel toolbarPanel;
	private javax.swing.JScrollPane treeScrollPanel;
	// End of variables declaration//GEN-END:variables

}