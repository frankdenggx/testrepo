  在J2EE体系中，可以通过使用JavaMail API（接口）来实现电子邮件的发送和收取功能。JavaMail API中包含了两个部分内容，分别如下。
   1.用来提供发送E－Mail的应用程序接口
   2.用来提供E－Mail服务器端应用程序接口
  在JavaMail API软件包中，包括了几个服务提供程序，JavaMail提供的API是由很多核心的抽象类组成，这些抽象类，都是根据其他一些典型的邮件系统抽象出来的。这些抽象类位于javax.mail包中，分别如下：
   1.Message类  JavaMail实现了RFC822以及MIME两个国际邮件信息标准，由于Message是抽象类，所以一般使用其子类MimeMessage，来描述MIME类型邮件的信息。
   2.Store类  Message抽象类的子类对象，是用来获取JavaMail服务器端、保存邮件信息的数据库对象。该对象拥有特别的协议，该协议可以用来进入存储邮件的数据库。
   3.Folder类   该抽象类的子类对象，提供了分层组织邮件信息的方式。每一个Folder（文件夹）中，同时可以包含其他的文件夹和邮件信息。邮件服务系统回味每一个用户都指定一个默认的文件夹。用户可以在该文件夹中，任意的创建其他的文件夹。
   4.Transport类    该抽象类提供了专门的传输协议，人和一个电子邮件的传输，都需要为其指定一个准确的传输协议。
  
   电子邮件协议概述
电子邮件通常使用4种主要协议，包括：SMTP、POP3、IMAP4和MIME。其中，前面3种用于邮件传输，第4种用于邮件编码。通常的邮件服务器主机包含SMTP服务器和POP3服务器两个软件，他们协同工作。MIME用于邮件客户程序，例如：Outlook Express

    1.SMTP协议
     SMTP（Simple Mail Transfer Protocol，简单邮件传输协议），是最早的电子邮件协议，具有简单、可靠和有效的特性。它可以用于不同邮件主机间的消息传输，以及用于将新消息提交给一台主机，然后由该主机来传递该消息。通过SMTP进行电子邮件的操作步骤如下所示：
     a.用于使用邮件客户程序编辑邮件，输入发送的目的地址，并选择发送邮件所用的SMTP服务器地址（原地址）。
     b.客户程序与SMTP服务器建立连接，将原地址、发送目的地址、邮件正文和附件发送到服务器，然后解除连接。
     c.服务器在收到邮件之后，描述该邮件的头部，根据发送的目的地址，确定该邮件是否发往本地用户还是远程用户。
     d.如果是发送到本地用户，服务器直接将邮件写到用户的信箱，邮件发送完成。
     e.如果发送到远程用户，服务器使用域名与远程邮件服务器建立连接，然后像客户程序一样再次转发邮件，如此进行接力传输，直至到达目的地。

    2.POP3协议
       POP3（Post Office Protocol，邮局协议），定义了一种机制，通过它，POP3邮件客户程序可以与POP3服务器联系，然后将收到的所有邮件下载到客户程序所在的计算机，实现邮件的脱机浏览。邮件下载后从服务器的信箱中删除，多用于访问单个邮箱。POP3协议中包含3种状态，即认可状态、处理状态以及更新状态。当客户端程序与服务器建立连接后，一旦用户的身份被确认成功，其状态即由认可状态转换为处理状态，在完成了相应的操作以后，客户机发出quit命令，进入更新状态，在更新后重新进入认可状态。

   3.IMAP协议
      IMAP（Internet Mail Access Protocol，因特网邮件访问协议），它是访问电子邮件信息的一种方法，而这些信息存储在邮件服务器上，满足了经常在不同客户程序上阅读和发送邮件的需要。收信箱和发件箱都放在IMAP服务器上，用户使用支持IMAP的客户程序在本地获得一份拷贝，在拷贝中做标记。在执行同步命令以后，对本地拷贝的修改直接映射到服务器上。换句话说，它允许“客户端”电子邮件程序访问远程的消息存储，并且在访问时，就像访问本地信息一样。

   4.MIME协议
     MIME（Multipurpose Internet Mail Extensions，多目的因特网邮件扩充协议），使得邮件包括图形、声音、非ACSII码文字等内容。它提供了将非ACSII码内容编码成ASCII码以及在目的地解码的方法。要正确传递非ASCII邮件，发送者和接收者必须使用支持MIME的邮件客户程序。